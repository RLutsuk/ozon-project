type User {
  id: ID!
  username: String!
  email: String!
  firstname: String!
  lastname: String!
  created: Timestamp!
  posts: [Post]
  comments: [Comment]
}

type Post { 
  id: ID!
  title: String!
  body: String! 
  user: User!
  created: Timestamp!
  allowcomments: Boolean!
  comments: [Comment]
} 

type Comment {
  id: ID!
  body: String! 
  user: User!
  post: Post!
  created: Timestamp!
  parent: Comment
  replies: [Comment]
}

type Query {  
  post(id: ID!): Post
  posts: [Post]
  #comment(id: ID!): Comment
  #comments(postId: ID!): [Comment]!
}

input CreatePostInput {
  title: String!
  body: String!
  userId: ID!
  allowComments: Boolean!
}

input UpdatePostInput {
  id: ID!
  title: String
  body: String
  allowComments: Boolean
}

input CreateCommentInput {
  body: String!
  userId: ID!
  postId: ID!
  parentId: ID
}

input UpdateCommentInput {
  id: ID!
  body: String!
  postId: ID!
}


type Mutation {
  createPost(input: CreatePostInput!): Post!
  createComment(input: CreateCommentInput!): Comment!
  updatePost(input: UpdatePostInput!): Post!
  updateComment(input: UpdatePostInput!): Comment!
  deletePost(id: ID!): Boolean!
  deleteComment(id: ID!): Boolean!
}

scalar Timestamp